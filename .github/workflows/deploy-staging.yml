# name: Deploy to Staging

# on:
#   push:
#     branches:
#       - release
#   workflow_dispatch: {}

# permissions:
#   pages: write
#   id-token: write

# concurrency:
#   group: "staging-deploy-${{ github.ref }}"
#   cancel-in-progress: false

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     environment:
#       name: staging
#       url: https://staging.aiopsvision.com
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Add CNAME
#         run: echo "staging.aiopsvision.com" > ./CNAME

#       - name: Setup Pages
#         uses: actions/configure-pages@v5

#       - name: Build with Jekyll
#         uses: actions/jekyll-build-pages@v1
#         with:
#           source: ./
#           destination: ./_site

#       - name: Upload to Pages
#         uses: actions/upload-pages-artifact@v3

#       - name: Deploy to Pages
#         uses: actions/deploy-pages@v4
#         id: deployment

#       - name: Show deployment URL
#         run: echo "Deployed to:${{ steps.deployment.outputs.page_url }}"




# use next of depend on build artifact:
# name:  Staging deploy
# on:
#   pull_request:
#     branches:
#       - release
#   push:
#     branches:
#       - release
#   workflow_run:
#     workflows: ["CI Pipeline"]
#     types: [completed]

# concurrency:
#   group: "staging-deploy-${{ github.event.workflow_run.head_branch }}"
#   cancel-in-progress: true

# permissions:
#   pages: write
#   id-token: write

# jobs:
#   deploy:
#     if: > 
#       (github.event_name == 'workflow_run' && 
#        github.event.workflow_run.conclusion == 'success' && 
#        github.event.workflow_run.head_branch == 'release')
# # here success on push not pr or last stage ci pipeline also package. 
#     runs-on: ubuntu-latest
#     # environment:
#     #   name: staging
#     #   url: https://staging.aiopsvision.com
#     steps:
#       - name: Download GitHub Pages Artifact
#         uses: actions/download-artifact@v4
#         with:
#           name: github-pages
#           path: ./_site

#       - name: Add Staging CNAME
#         run: |
#           mkdir -p ./_site
#           echo "staging.aiopsvision.com" > ./_site/CNAME

#       - name: Setup Pages
#         uses: actions/configure-pages@v5

#       - name: Deploy into Staging
#         uses: actions/deploy-pages@v4
#         id: deployment

#       - name: Show URL
#         run: echo "Deployed to:${{ steps.deployment.outputs.page_url }}"


name: Staging deploy
on:
  pull_request:
    branches: [release]
  push:
    branches: [release]
  workflow_run:
    workflows: ["CI Pipeline"]
    types: [completed]

concurrency:
  group: "staging-deploy-${{ github.event.workflow_run.head_branch || github.ref }}"
  cancel-in-progress: true

permissions:
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/release') ||
      (github.event_name == 'pull_request' && github.base_ref == 'refs/heads/release') ||
      (github.event_name == 'workflow_run' && 
       github.event.workflow_run.conclusion == 'success' && 
       github.event.workflow_run.head_branch == 'release')
    steps:
      - name: Download GitHub Pages Artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./_site

      - name: Add Staging CNAME
        run: |
          mkdir -p ./_site
          echo "staging.aiopsvision.com" > ./_site/CNAME

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Deploy into Staging
        uses: actions/deploy-pages@v4
        id: deployment

      - name: Show URL
        run: echo "Deployed to:${{ steps.deployment.outputs.page_url }}"